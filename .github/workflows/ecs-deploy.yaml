name: Deploy to ECS 
on:
    push:
      branches:
        main
    workflow_dispatch:
jobs:
   builddeploytoecs:
      runs-on: ubuntu-latest
      permissions:
        contents: read 
        packages: write  
      steps:
        ### clone the code from the runner 
        - name: checkout code from repo 
          uses: actions/checkout@v3
        ### setup java and maven 
        - name: setup java and maven environment    
          uses: actions/setup-java@v3
          with:
            distribution: 'adopt'
            java-version: '11'  
        ### use maven to package artifact, when these step executes the artifact should be created. 
        - name: package with maven 
          run: mvn package 
        - name: Upload to github packages
          run: mvn --batch-mode deploy
          env:
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        - name: perform code analysis
          run: mvn sonar:sonar
        - name: authenticate to aws environment
          uses: aws-actions/configure-aws-credentials@v1
          with: 
            aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
            aws-secret-access-key-id: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: us-east-1
        - name: Login to ecr repository
          id: login-ecr
          uses: aws-action/amazon-ecr-login
        - name: containerize artifact with maven
          id: build-image
          env:
            REGISTRY: ${{steps.login-ecr.outputs.registry}}  
            REPOSITORY: my-web-app
            IMAGE_TAG: ${{github.sha}}
          run: |
            docker build -t $REGISTRY/REPOSITORY:IMAGE_TAG
            docker push  $REGISTRY/REPOSITORY:IMAGE_TAG
            echo "image=$REGISTRY/REPOSITORY:IMAGE_TAG" >> $GITHUB_OUTPUT 

          
            


        

        
